#is linked list cycles hascycles or not
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def hasCycle(self, head: Optional[ListNode]) -> bool:
        slow=head
        fast=head
        while(fast and fast.next):
            slow=slow.next
            fast=fast.next.next
            if(slow ==fast):
                fast=head
                while(slow!=fast):
                    slow=slow.next
                    fast=fast.next
                fast=fast.next
                c=1
                while(slow!=fast):
                    fast=fast.next
                    c+=1
                return c
        return 0
